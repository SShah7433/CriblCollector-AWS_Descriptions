{
  "type": "object",
  "title": "",
  "required": [
    "awsAuthenticationMethod",
    "endpoints",
    "regions"
  ],
  "properties": {
    "endpoints": {
      "type": "array",
      "title": "Endpoints",
      "description": "AWS API Endpoints to collect",
      "minLength": 1,
      "items": {
        "type": "string",
        "enum": [
          "cloudfront_listDistributions",
          "ec2_describeAddresses",
          "ec2_describeImages",
          "ec2_describeInstances",
          "ec2_describeKeyPairs",
          "ec2_describeNetworkAcls",
          "ec2_describeRegions",
          "ec2_describeReservedInstances",
          "ec2_describeSecurityGroups",
          "ec2_describeSnapshots",
          "ec2_describeSubnets",
          "ec2_describeVolumes",
          "ec2_describeVpcs",
          "elb_describeInstanceHealth",
          "elb_describeLoadBalancers",
          "elb_describeTags",
          "elbv2_describeListeners",
          "elbv2_describeLoadBalancers",
          "elbv2_describeTags",
          "elbv2_describeTargetGroups",
          "elbv2_describeTargetHealth",
          "iam_listAttachedUserPolicies",
          "iam_listGroups",
          "iam_listPolicies",
          "iam_listRoles",
          "iam_listUsers",
          "lambda_listFunctions",
          "rds_describeDbInstances",
          "rds_describeReservedDbInstances",
          "s3_listBuckets"
        ],
        "enumNames": [
          "CloudFront - List Distributions",
          "EC2 - Describe Addresses",
          "EC2 - Describe Images",
          "EC2 - Describe Instances",
          "EC2 - Describe Key Pairs",
          "EC2 - Describe Network ACLs",
          "EC2 - Describe Regions",
          "EC2 - Describe Reserved Instances",
          "EC2 - Describe Security Groups",
          "EC2 - Describe Snapshots",
          "EC2 - Describe Subnets",
          "EC2 - Describe Volumes",
          "EC2 - Describe VPCs",
          "ELB - Describe Instance Health (CLB)",
          "ELB - Describe Load Balancers (CLB)",
          "ELB - Describe Tags (CLB)",
          "ELB - Describe Listeners (ALB/NLB)",
          "ELB - Describe Load Balancers (ALB/NLB)",
          "ELB - Describe Tags (ALB/NLB)",
          "ELB - Describe Target Groups (ALB/NLB)",
          "ELB - Describe Target Health (ALB/NLB)",
          "IAM - List Attached User Policies",
          "IAM - List Groups",
          "IAM - List Policies",
          "IAM - List Roles",
          "IAM - List Users",
          "Lambda - List Functions",
          "RDS - Describe DB Instances",
          "RDS - Describe Reserved DB Instances",
          "S3 - List Buckets"
        ]
      }
    },
    "regions": {
      "type": "array",
      "title": "AWS Regions",
      "description": "AWS Region from which to retrieve data.",
      "minLength": 1,
      "items": {
        "type": "string",
        "enum": [
          "us-east-1",
          "us-east-2",
          "us-west-1",
          "us-west-2",
          "af-south-1",
          "ca-central-1",
          "eu-west-1",
          "eu-central-1",
          "eu-west-2",
          "eu-south-1",
          "eu-west-3",
          "eu-north-1",
          "ap-east-1",
          "ap-northeast-1",
          "ap-northeast-2",
          "ap-southeast-1",
          "ap-southeast-2",
          "ap-south-1",
          "me-south-1",
          "sa-east-1",
          "us-gov-east-1",
          "us-gov-west-1"
        ],
        "enumNames": [
          "US East (N. Virginia)",
          "US East (Ohio)",
          "US West (N. California)",
          "US West (Oregon)",
          "Africa (Cape Town)",
          "Canada (Central)",
          "EU (Ireland)",
          "EU (Frankfurt)",
          "EU (London)",
          "EU (Milan)",
          "EU (Paris)",
          "EU (Stockholm)",
          "Asia Pacific (Hong Kong)",
          "Asia Pacific (Tokyo)",
          "Asia Pacific (Seoul)",
          "Asia Pacific (Singapore)",
          "Asia Pacific (Sydney)",
          "Asia Pacific (Mumbai)",
          "Middle East (Bahrain)",
          "South America (SÃ£o Paulo)",
          "US Gov East 1",
          "US Gov West 1"
        ]
      }
    },
    "awsAuthenticationMethod": {
      "type": "string",
      "title": "Authentication Method",
      "description": "AWS authentication method. Choose Auto to use IAM roles.",
      "default": "auto",
      "enum": [
        "auto",
        "manual",
        "secret"
      ],
      "enumNames": [
        "Auto",
        "Manual",
        "Secret Key pair"
      ]
    },
    "enableAssumeRole": {
      "type": "boolean",
      "title": "Enable Assume Role",
      "description": "Use AssumeRole credentials",
      "default": false
    },
    "batchSize": {
      "type": "number",
      "title": "API Batch Size",
      "default": 100,
      "description": "Number of results to pull per API call (does not apply to endpoints that do not support pagination)"
    }
  },
  "dependencies": {
    "awsAuthenticationMethod": {
      "oneOf": [
        {
          "properties": {
            "awsAuthenticationMethod": {
              "enum":["auto"]
            }
          }
        },
        {
          "properties": {
            "awsAuthenticationMethod": {"enum": ["manual"]},
            "awsApiKey": {
              "type": "string",
              "title": "Access key",
              "description": "Access key. If not present, will fall back to env.AWS_ACCESS_KEY_ID, or to the metadata endpoint for IAM creds. Optional when running on AWS. This value can be a constant or a JavaScript expression."
            },
            "awsSecretKey": {
              "type": "string",
              "title": "Secret key",
              "description": "Secret key. If not present, will fall back to env.AWS_SECRET_ACCESS_KEY, or to the metadata endpoint for IAM creds. Optional when running on AWS. This value can be a constant or a JavaScript expression.",
              "encrypt": true
            }
          }
        },
        {
          "properties": {
            "awsAuthenticationMethod": {"enum": ["secret"]},
            "awsSecret": {
              "type": "string",
              "title": "Secret key pair",
              "secret": {"target": ["awsApiKey", "awsSecretKey"], "type": "keypair"},
              "description": "Select (or create) a stored secret that references AWS access key and secret key."
            }
          }
        }
      ]
    },
    "enableAssumeRole": {
      "oneOf": [
        {
          "properties": {
            "enableAssumeRole": {
              "enum": [true]
            },
            "assumeRoleArn": {
              "type": "string",
              "title": "AssumeRole ARN",
              "description": "Amazon Resource Name (ARN) of the role to assume",
              "pattern": "^arn:",
              "minLength": 20
            },
            "assumeRoleExternalId": {
              "type": "string",
              "title": "External ID",
              "description": "External ID to use when assuming role"
            },
            "assumeRoleDurationSeconds": {
              "type": "number",
              "title": "Duration (seconds)",
              "description": "Duration of the Assumed Role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).",
              "minimum": 900,
              "maximum": 43200,
              "default": 3600
            }
          }
        },
        {
          "properties": {
            "useAuth": {
              "enum": [
                false
              ]
            }
          }
        }
      ]
    }
  }
}